{
    "buildInfo": {
        "rustc": {
            "version": "1.86.0",
            "commitHash": "05f9846f893b09a1be1fc8560e33fc3c815cfecb",
            "commitDate": "2025-03-31",
            "channel": "Stable",
            "short": "rustc 1.86.0 (05f9846f8 2025-03-31)"
        },
        "contractCrate": {
            "name": "nftupgrade",
            "version": "0.1.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.53.2"
        }
    },
    "name": "NftUpgrade",
    "constructor": {
        "inputs": [],
        "outputs": []
    },
    "upgradeConstructor": {
        "inputs": [],
        "outputs": []
    },
    "endpoints": [
        {
            "docs": [
                "Initialize a Test NFT with level 1 in attributes, plus some more info to match current EMR NFTs.",
                "This will make an NFT similar to the current EMR NFTs."
            ],
            "name": "initialize",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "depositNft",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "retrieveNft",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "claimNft",
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Upgrade an NFT to the same level but with more data in attributes."
            ],
            "name": "upgradeNft",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "increaseLevel",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "decreaseLevel",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "getIsScPaused",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "getAllowedAddresses",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        },
        {
            "name": "getNftOwnerAddress",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "nft_token",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "nft_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getNftFromAddress",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "UserNft"
                }
            ]
        },
        {
            "name": "getUserRetrieveEpoch",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getUnbondingPeriod",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "pauseSc",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "resumeSc",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [],
            "outputs": []
        },
        {
            "name": "addAllowedAddresses",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "addresses",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "removeAllowedAddresses",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "addresses",
                    "type": "variadic<Address>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        {
            "name": "setUnbondingPeriod",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "period",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "getTags",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftIdentifier",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getNftIdentifierInvestors",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getNftAttributes",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftUris",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "List<bytes>"
                }
            ]
        },
        {
            "name": "getNftUriJson",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftAttributesLevelBeforeUpgrade",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftAttributesLevelAfterUpgrade",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftLevel",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "token_identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "token_nonce",
                    "type": "u64"
                }
            ],
            "outputs": [
                {
                    "type": "bytes"
                }
            ]
        },
        {
            "name": "getNftInfoBeforeUpgrade",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                },
                {
                    "type": "u64"
                },
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getNftInfoAfterUpgrade",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                },
                {
                    "type": "u64"
                },
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getNftNonce",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getNftLevelByAddress",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "docs": [
                "is a number -> 01 True , {empty}/\"\" False"
            ],
            "name": "getRemainingUnbondingTime",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "UserRetrieve"
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": false,
    "types": {
        "UserNft": {
            "type": "struct",
            "fields": [
                {
                    "name": "identifier",
                    "type": "TokenIdentifier"
                },
                {
                    "name": "nonce",
                    "type": "u64"
                }
            ]
        },
        "UserRetrieve": {
            "type": "struct",
            "fields": [
                {
                    "name": "counter",
                    "type": "u64"
                },
                {
                    "name": "unlocking",
                    "type": "bool"
                }
            ]
        }
    }
}
